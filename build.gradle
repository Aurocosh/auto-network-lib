buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT"
    }
}

plugins {
    id "com.jfrog.bintray" version "1.7"
}

apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'java'
apply plugin: 'net.minecraftforge.gradle.forge'


//plugins {
//    id "com.jfrog.bintray" version "1.7"
//}

repositories {
    mavenCentral()
}

//logging.level = LogLevel.DEBUG
mod_version = "${mod_version}.${generateVersionCode()}".toString()
version = mod_version
//println version

group = mod_group
archivesBaseName = mod_archivesBaseName

sourceCompatibility = 1.8
targetCompatibility = 1.8

minecraft {
    version = "${mc_sub_version}-${forge_version}"
    runDir = "run"
    mappings = mc_mappings
    useDepAts = true
//    makeObfSourceJar = false

    replace 'GRADLE.BUILD', '1'
    replace 'GRADLE.VERSION', mod_version
}

dependencies {

}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

static def generateVersionCode() {
    def result = "git rev-list HEAD --count".execute().text.trim() //unix
    if(result.empty) result = "PowerShell -Command git rev-list HEAD --count".execute().text.trim() //windows
    if(result.empty) throw new RuntimeException("Could not generate versioncode on this platform? Cmd output: ${result.text}")
    return result.toInteger()
}

jar {

}

publishing {
    publications {
        MyPublication(MavenPublication) {
            from components.java
            groupId 'org.jfrog.example.gradle'
            artifactId 'auto-message-lib'
            version = mod_version
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_API_KEY')
    publications = ['MyPublication']
    pkg {
        repo = 'Test'
        name = 'auto-message-lib'
        licenses = ['LGPL-3.0']
        vcsUrl = 'https://github.com/Aurocosh/auto-message-lib.git'
        publicDownloadNumbers = true
        version {
            name = 'AutoMessageLib-' + mod_version
            desc = 'Auto message lib'
            vcsTag = mod_version
        }
    }
}